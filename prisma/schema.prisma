generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Facultad {
  id        Int              @id @default(autoincrement())
  nombre    String           @unique @db.VarChar(255)
  codigo    String?          @db.VarChar(50)
  sector    Int?             
  sheetId   String?          @map("sheet_id") @db.VarChar(255)
  activa    Boolean          @default(true)
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime         @updatedAt @map("updated_at")
  carreras  Carrera[]
  sectores  SectorFacultad[]
  syncLogs  SyncLog[]

  @@map("facultades")
}

model Carrera {
  id            Int            @id @default(autoincrement())
  facultadId    Int            @map("facultad_id")
  nombre        String         @db.VarChar(255)
  codigo        String         @db.VarChar(50)
  activa        Boolean        @default(true)
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  facultad      Facultad       @relation(fields: [facultadId], references: [id], onDelete: Cascade)
  carrerasTotem CarreraTotem[]
  examenes      Examen[]

  @@unique([facultadId, codigo])
  @@map("carreras")
}

model Examen {
  id                 Int          @id @default(autoincrement())
  carreraId          Int          @map("carrera_id")
  aulaId             Int?         @map("aula_id")
  nombreMateria      String       @map("nombre_materia") @db.VarChar(255)
  fecha              DateTime     @db.Date
  hora               DateTime?    @db.Time(0)
  tipoExamen         String?      @map("tipo_examen") @db.VarChar(100)
  monitoreo          String?      @db.VarChar(100)
  materialPermitido  String?      @map("material_permitido") @db.Text
  observaciones      String?      @db.Text
  activo             Boolean      @default(true)
  createdAt          DateTime     @default(now()) @map("created_at")
  updatedAt          DateTime     @updatedAt @map("updated_at")
  asignacionAuto     Boolean      @default(true) @map("asignacion_auto")
  criterioAsignacion String?      @map("criterio_asignacion") @db.VarChar(100)
  modalidadExamen    String?      @map("modalidad_examen") @db.VarChar(50)
  requierePc         Boolean      @default(false) @map("requiere_pc")
  cantidadInscriptos Int?         @default(0) @map("cantidad_inscriptos")
  fechaUltConsulta   DateTime?    @map("fecha_ult_consulta")
  actasExamen        ActaExamen[]
  aula               Aula?        @relation(fields: [aulaId], references: [id])
  carrera            Carrera      @relation(fields: [carreraId], references: [id], onDelete: Cascade)
  examenTotem        ExamenTotem?

  @@index([aulaId], map: "examenes_aula_id_fkey")
  @@index([carreraId], map: "examenes_carrera_id_fkey")
  @@map("examenes")
}

model SyncLog {
  id                  Int      @id @default(autoincrement())
  facultadId          Int      @map("facultad_id")
  tipoOperacion       String   @map("tipo_operacion") @db.VarChar(50)
  resultado           String   @db.VarChar(50)
  mensaje             String?  @db.Text
  registrosProcesados Int      @default(0) @map("registros_procesados")
  createdAt           DateTime @default(now()) @map("created_at")
  facultad            Facultad @relation(fields: [facultadId], references: [id], onDelete: Cascade)

  @@index([facultadId], map: "sync_logs_facultad_id_fkey")
  @@map("sync_logs")
}

model Estudiante {
  id          Int          @id @default(autoincrement())
  dni         String       @unique @db.VarChar(20)
  nombre      String       @db.VarChar(100)
  apellido    String       @db.VarChar(100)
  email       String?      @db.VarChar(255)
  telefono    String?      @db.VarChar(50)
  activo      Boolean      @default(true)
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  actasExamen ActaExamen[]

  @@map("estudiantes")
}

model Aula {
  id               Int      @id @default(autoincrement())
  nombre           String   @unique @db.VarChar(100)
  capacidad        Int?
  ubicacion        String?  @db.VarChar(255)
  disponible       Boolean  @default(true)
  alumnosAsignados Int      @default(0) @map("alumnos_asignados")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  examenes         Examen[]

  @@map("aulas")
}

model TotemData {
  id        Int      @id @default(autoincrement())
  sheetName String   @db.VarChar(255)
  data      Json
  timestamp DateTime @default(now()) @map("created_at")
  processed Boolean  @default(false)

  @@map("totem_data")
}

model ActaExamen {
  id            Int        @id @default(autoincrement())
  examenId      Int        @map("examen_id")
  estudianteId  Int        @map("estudiante_id")
  presente      Boolean?
  nota          Decimal?   @db.Decimal(4, 2)
  observaciones String?    @db.Text
  createdAt     DateTime   @default(now()) @map("created_at")
  updatedAt     DateTime   @updatedAt @map("updated_at")
  estudiante    Estudiante @relation(fields: [estudianteId], references: [id], onDelete: Cascade)
  examen        Examen     @relation(fields: [examenId], references: [id], onDelete: Cascade)

  @@unique([examenId, estudianteId])
  @@index([estudianteId], map: "actas_examenes_estudiante_id_fkey")
  @@map("actas_examenes")
}

model SectorFacultad {
  id         Int      @id @default(autoincrement())
  sector     String   @unique @db.VarChar(50)
  facultadId Int      @map("facultad_id")
  activo     Boolean  @default(true)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  facultad   Facultad @relation(fields: [facultadId], references: [id], onDelete: Cascade)

  @@index([facultadId], map: "sector_facultad_facultad_id_fkey")
  @@map("sectores_facultades")
}

model CarreraTotem {
  id          Int      @id @default(autoincrement())
  codigoTotem String   @unique @map("codigo_totem") @db.VarChar(50)
  carreraId   Int?     @map("carrera_id")
  nombreTotem String   @map("nombre_totem") @db.VarChar(255)
  activo      Boolean  @default(true)
  esMapeada   Boolean  @default(false) @map("es_mapeada")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  carrera     Carrera? @relation(fields: [carreraId], references: [id])

  @@index([carreraId], map: "carrera_totem_carrera_id_fkey")
  @@map("carreras_totem")
}

model ExamenTotem {
  id             Int      @id @default(autoincrement())
  examenId       Int      @unique @map("examen_id")
  sectorTotem    String   @map("sector_totem") @db.VarChar(50)
  carreraTotem   String   @map("carrera_totem") @db.VarChar(50)
  materiaTotem   String   @map("materia_totem") @db.VarChar(50)
  areaTemaTotem  String?  @map("area_tema_totem") @db.VarChar(50)
  modoTotem      String?  @map("modo_totem") @db.VarChar(50)
  urlTotem       String?  @map("url_totem") @db.Text
  catedraTotem   String?  @map("catedra_totem") @db.VarChar(255)
  docenteTotem   String?  @map("docente_totem") @db.VarChar(255)
  monitoreoTotem String?  @map("monitoreo_totem") @db.VarChar(255)
  controlTotem   String?  @map("control_totem") @db.VarChar(255)
  dataOriginal   Json     @map("data_original")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  examen         Examen   @relation(fields: [examenId], references: [id], onDelete: Cascade)

  @@index([sectorTotem], map: "examen_totem_sector_fkey")
  @@index([carreraTotem], map: "examen_totem_carrera_fkey")
  @@map("examenes_totem")
}

model AulaConfiguracion {
  id                  Int      @id @default(autoincrement())
  nombre              String   @unique @db.VarChar(100)
  tipo                String   @db.VarChar(50)
  capacidadMaxima     Int
  recursoEspecial     String?  @map("recurso_especial") @db.VarChar(100)
  cantidadRecurso     Int?     @map("cantidad_recurso")
  esParaInformatica   Boolean  @default(false) @map("es_para_informatica")
  prioridadAsignacion Int      @default(0) @map("prioridad_asignacion")
  disponible          Boolean  @default(true)
  observaciones       String?  @db.Text
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  @@map("aulas_configuracion")
}

model ConfiguracionVisual {
  id              Int      @id @default(autoincrement())
  backgroundImage String?  @map("background_image") @db.VarChar(500)
  titulo          String?  @db.VarChar(255)
  subtitulo       String?  @db.VarChar(255)
  colorPrimario   String?  @map("color_primario") @db.VarChar(7)
  colorSecundario String?  @map("color_secundario") @db.VarChar(7)
  activa          Boolean  @default(true)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@map("configuracion_visual")
}
