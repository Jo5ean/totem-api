generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Facultad {
  id        Int              @id @default(autoincrement())
  nombre    String           @unique @db.VarChar(255)
  codigo    String?          @db.VarChar(50)
  sheetId   String?          @map("sheet_id") @db.VarChar(255)
  activa    Boolean          @default(true)
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime         @updatedAt @map("updated_at")
  carreras  Carrera[]
  examenes  Examen[]
  sectores  SectorFacultad[]

  @@map("facultades")
}

model Carrera {
  id            Int            @id @default(autoincrement())
  facultadId    Int            @map("facultad_id")
  nombre        String         @db.VarChar(255)
  codigo        String         @db.VarChar(50)
  activa        Boolean        @default(true)
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  facultad      Facultad       @relation(fields: [facultadId], references: [id], onDelete: Cascade)
  carrerasTotem CarreraTotem[]
  examenes      Examen[]

  @@unique([facultadId, codigo])
  @@map("carreras")
}

model Examen {
  id                 Int          @id @default(autoincrement())
  carreraId          Int          @map("carrera_id")
  facultadId         Int          @map("facultad_id")
  aulaId             Int?         @map("aula_id")
  
  // Campos para match con sistemas externos (similares a innovalapi)
  materia_codigo     String       @db.VarChar(20)
  nombreMateria      String       @map("nombre_materia") @db.VarChar(255)
  areatema           String?      @db.VarChar(100)
  
  // Información básica del examen
  fecha              DateTime     @db.Date
  hora               DateTime?    @db.Time(0)
  tipoExamen         String?      @map("tipo_examen") @db.VarChar(100)
  modalidadExamen    String?      @map("modalidad_examen") @db.VarChar(50)
  
  // Información de personal
  catedra            String?      @db.VarChar(100)
  docente            String?      @db.VarChar(255)
  monitoreo          String?      @db.VarChar(100)
  control_cargo      String?      @map("control_cargo") @db.VarChar(50)
  
  // Información adicional
  materialPermitido  String?      @map("material_permitido") @db.Text
  observaciones      String?      @db.Text
  observaciones_adicionales String? @map("observaciones_adicionales") @db.Text
  url                String?      @db.VarChar(255)
  acta_numero        String?      @map("acta_numero") @db.VarChar(50)
  
  // Control de sistema
  cantidadInscriptos Int?         @default(0) @map("cantidad_inscriptos")
  fechaUltConsulta   DateTime?    @map("fecha_ult_consulta")
  requierePc         Boolean      @default(false) @map("requiere_pc")
  activo             Boolean      @default(true)
  
  // Timestamps
  createdAt          DateTime     @default(now()) @map("created_at")
  updatedAt          DateTime     @updatedAt @map("updated_at")
  
  // Relaciones
  carrera            Carrera      @relation(fields: [carreraId], references: [id], onDelete: Cascade)
  facultad           Facultad     @relation(fields: [facultadId], references: [id], onDelete: Cascade)
  aula               Aula?        @relation(fields: [aulaId], references: [id])
  examenTotem        ExamenTotem?
  estudianteExamenes EstudianteExamen[]

  @@index([aulaId], map: "examenes_aula_id_fkey")
  @@index([carreraId], map: "examenes_carrera_id_fkey")
  @@index([facultadId], map: "examenes_facultad_id_fkey")
  @@index([materia_codigo], map: "examenes_materia_codigo_fkey")
  @@index([fecha], map: "examenes_fecha_fkey")
  @@map("examenes")
}

model Estudiante {
  dni       String       @id @db.VarChar(20)
  nombre    String       @db.VarChar(100)
  apellido  String       @db.VarChar(100)
  email     String?      @db.VarChar(255)
  telefono  String?      @db.VarChar(50)
  activo    Boolean      @default(true)
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
  examenes  EstudianteExamen[]

  @@map("estudiantes")
}

// Modelo de Aula simplificado (similar a innovalapi)
model Aula {
  id        Int      @id @default(autoincrement())
  nombre    String   @unique @db.VarChar(100)
  sede      String   @db.VarChar(100)
  capacidad Int
  activa    Boolean  @default(true)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  examenes  Examen[]
  ocupaciones OcupacionAula[]

  @@map("aulas")
}

// Modelo de Ocupación de Aulas (control de capacidad por fecha/hora)
model OcupacionAula {
  id          Int      @id @default(autoincrement())
  aula_id     Int
  fecha       DateTime @db.Date
  hora        String   @db.VarChar(10)
  utilizados  Int      @default(0)
  capacidad_teorica Int  @map("capacidad_teorica")
  observaciones String? @db.Text
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  
  // Relaciones
  aula        Aula     @relation(fields: [aula_id], references: [id], onDelete: Cascade)
  
  @@unique([aula_id, fecha, hora])
  @@index([fecha], map: "ocupacion_aula_fecha_fkey")
  @@map("ocupacion_aula")
}

model TotemData {
  id        Int      @id @default(autoincrement())
  sheetName String   @db.VarChar(255)
  data      Json
  timestamp DateTime @default(now()) @map("created_at")
  processed Boolean  @default(false)

  @@map("totem_data")
}

// Modelo de relación Estudiante-Examen (similar a innovalapi)
model EstudianteExamen {
  id         Int      @id @default(autoincrement())
  examen_id  Int
  dni        String   @db.VarChar(20)
  asistencia Boolean  @default(false)
  aprobado   Boolean  @default(false)
  nota       Decimal? @db.Decimal(4, 2)
  observaciones String? @db.Text
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  
  // Relaciones
  examen     Examen     @relation(fields: [examen_id], references: [id], onDelete: Cascade)
  estudiante Estudiante @relation(fields: [dni], references: [dni], onDelete: Cascade)
  
  @@unique([examen_id, dni])
  @@index([dni], map: "estudiante_examen_dni_fkey")
  @@map("estudiante_examen")
}

model SectorFacultad {
  id         Int      @id @default(autoincrement())
  sector     String   @unique @db.VarChar(50)
  facultadId Int      @map("facultad_id")
  activo     Boolean  @default(true)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  facultad   Facultad @relation(fields: [facultadId], references: [id], onDelete: Cascade)

  @@index([facultadId], map: "sector_facultad_facultad_id_fkey")
  @@map("sectores_facultades")
}

model CarreraTotem {
  id          Int      @id @default(autoincrement())
  codigoTotem String   @unique @map("codigo_totem") @db.VarChar(50)
  carreraId   Int?     @map("carrera_id")
  nombreTotem String   @map("nombre_totem") @db.VarChar(255)
  activo      Boolean  @default(true)
  esMapeada   Boolean  @default(false) @map("es_mapeada")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  carrera     Carrera? @relation(fields: [carreraId], references: [id])

  @@index([carreraId], map: "carrera_totem_carrera_id_fkey")
  @@map("carreras_totem")
}

model ExamenTotem {
  id             Int      @id @default(autoincrement())
  examenId       Int      @unique @map("examen_id")
  sectorTotem    String   @map("sector_totem") @db.VarChar(50)
  carreraTotem   String   @map("carrera_totem") @db.VarChar(50)
  materiaTotem   String   @map("materia_totem") @db.VarChar(50)
  areaTemaTotem  String?  @map("area_tema_totem") @db.VarChar(50)
  modoTotem      String?  @map("modo_totem") @db.VarChar(50)
  urlTotem       String?  @map("url_totem") @db.Text
  catedraTotem   String?  @map("catedra_totem") @db.VarChar(255)
  docenteTotem   String?  @map("docente_totem") @db.VarChar(255)
  monitoreoTotem String?  @map("monitoreo_totem") @db.VarChar(255)
  controlTotem   String?  @map("control_totem") @db.VarChar(255)
  dataOriginal   Json     @map("data_original")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  examen         Examen   @relation(fields: [examenId], references: [id], onDelete: Cascade)

  @@index([sectorTotem], map: "examen_totem_sector_fkey")
  @@index([carreraTotem], map: "examen_totem_carrera_fkey")
  @@map("examenes_totem")
}
